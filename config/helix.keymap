/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    chosen {
        zephyr,display = &oled;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
         &kp ESC        &kp N1    &kp N2           &kp N3     &kp N4     &kp N5                           &kp N6     &kp N7     &kp N8            &kp N9             &kp N0  &kp BACKSPACE
         &kp TAB         &kp Q     &kp W            &kp E      &kp R      &kp T                            &kp Y      &kp U      &kp I             &kp O              &kp P     &kp DELETE
           &mo 2         &kp A     &kp S            &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K             &kp L           &kp SEMI        &kp SQT
       &kp LSHFT         &kp Z     &kp X            &kp C      &kp V      &kp B      &mo 1      &mo 1      &kp N      &kp M  &kp COMMA        &kp PERIOD          &kp SLASH        &kp RET
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LALT  &kp PRINTSCREEN  &kp GRAVE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
            // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
            // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
            // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
            // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |

            bindings = <
   &kp LG(DOWN)  &kp LS(LG(LEFT_ARROW))      &kp LG(UP)  &kp LG(LS(RIGHT_ARROW))  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF                                    &rgb_ug RGB_EFR  &rgb_ug RGB_EFF   &kp KP_NUMLOCK     &kp KP_SLASH       &kp KP_MULTIPLY          &kp BACKSPACE
&kp LA(LC(TAB))         &kp LC(PAGE_UP)    &kp UP_ARROW        &kp LC(PAGE_DOWN)  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                                    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp KP_NUMBER_7  &kp KP_NUMBER_8       &kp KP_NUMBER_9            &kp KP_PLUS
      &kp ENTER          &kp LEFT_ARROW  &kp DOWN_ARROW          &kp RIGHT_ARROW  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI                                    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &kp KP_NUMBER_4  &kp KP_NUMBER_5       &kp KP_NUMBER_6           &kp KP_MINUS
         &trans                  &trans          &trans                   &trans  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI           &trans           &trans  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &kp KP_NUMBER_1  &kp KP_NUMBER_2       &kp KP_NUMBER_3              &kp ENTER
         &trans                  &trans          &trans                   &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI       &kp KP_DOT  &kp KP_NUMBER_0  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
            // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
            // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
            // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
            // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |

            bindings = <
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &trans  &trans  &trans   &trans   &trans   &trans
    &trans        &trans        &trans        &trans        &trans  &out OUT_BLE                            &out OUT_BLE  &trans  &trans   &trans   &trans   &trans
    &trans        &trans        &trans        &trans        &trans  &out OUT_USB   &sys_reset   &sys_reset  &out OUT_USB  &trans  &trans   &trans   &trans   &trans
    &trans        &trans        &trans        &trans        &trans  &out OUT_TOG  &bootloader  &bootloader  &out OUT_TOG  &trans  &trans   &trans   &trans   &trans
            >;
        };

        adjust_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
            // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
            // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
            // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
            // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |

            bindings = <
 &kp GRAVE      &kp EXCL        &kp AT      &kp HASH      &kp DLLR     &kp PRCNT                            &kp CARET         &kp AMPS        &kp ASTRK         &kp LPAR         &kp RPAR  &ext_power EP_TOG
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI    &rgb_ug RGB_TOG
&bt BT_NXT  &out OUT_TOG  &out OUT_USB  &out OUT_BLE        &trans        &trans                      &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD             &trans
&bt BT_PRV        &trans        &trans        &trans        &trans        &trans  &kp LBRC  &kp RBRC           &trans           &trans           &trans           &trans           &trans             &trans
    &trans        &trans        &trans        &trans        &trans        &trans    &trans    &trans           &trans           &trans           &trans           &trans           &trans             &trans
            >;
        };
    };
};

/*RGB underglow*/

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };
    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names =
        "default",
        "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>;/* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <32>;/* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/*OLED display*/

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        label = "DISPLAY";
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        prechargep = <0x22>;
    };
};
